# reference: https://github.com/death-of-rats/CTF/tree/master/Dice2021/plagiarism

import copy
from fractions import Fraction
from Crypto.Util.number import getPrime

def gcd(a0,a1):
    while True:
        print(a0.degree(), end=", ", flush=True)
        if a0 % a1 == 0:
            return a1
        if a0.degree() == a1.degree():
            a1 = a0%a1
        H = hgcd(a0,a1)

        [b0,b1] = H * vector([a0, a1])
        if b0%b1==0:
            return b1
        c = b0 % b1
        a0 = b1
        a1 = c
        print("",flush=True)


def hgcd(a0,a1):
    if a1.degree() <= (a0.degree()//2):
        return Matrix([[1,0],[0,1]])

    m = a0.degree()//2
    X = a0.variables()[0]
    b0 = a0 // X**m
    b1 = a1 // X**m
    
    H1 = hgcd(b0,b1)
    [d,e] = H1 * vector([a0, a1])
    ff = d % e
    m = m // 2
    g0 = e // X**m
    g1 = ff // X**m

    H2 = hgcd(g0,g1)
    q = d // e
    return H2 * Matrix([[0,1],[1,-q]]) * H1


c1=43742594547459280015840782365601453699578441772850033440518247779482838582940252015439096219087338027690011286216184787049202574436154747156476309010993755080470524299716869314927254705607167460432231669717467037724556575283712239346100607907569752509337813721293041357868039986174415602239440056976524267607
c2=69480978262993682792679080762842610540337106588519631238008037725167180370720605496919718736954988751707765309117432798585270152229410030724745620958952652873658169395079545861940074809487260090453527353758614827671141030527672161466877700804924335757752130847461020667789230893623267206258149176295306311668
N=144706283523034793664129699895404975901336178026044182629011063115605511296945011701330394584972973263520252534175637358974748274568840607119391341900226103835804362814558941378563244387754842712639171961261801664264148680503595755440325259842897408914175792677740252145163987884742213774913413326466931023023
e=65537
a=17770992140275999890529838257972509369145810081199965102886387105609775982504385898180854434018114749837949577373672903355518190788620754849752506057892970290700484322247800890223836070730416248302840693792992154853145415897277010168568320546161018779457253999262355626167992557059217038881853688794722410629

R = Zmod(N)
PR.<x> = PolynomialRing(R)

# R.<x> = Zmod(N)[]
e = 65537
print("a")
g1 = (x+a)^e - c2
print("a")
g2 = x^e - c1
print("a")

res = gcd(g1, g2)

print(res)
print("ans: ", -res[0]/res[1])

# i = 0
# while g2:
#     i += 1
#     print(i)
#     g1, g2 = g2, g1 % g2
# 
# print(-g1[0]/g1[1])